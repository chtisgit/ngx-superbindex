#!/usr/bin/env bash

development_environment() {
	[ "$ENVIRONMENT" = 'development' ]
}

script() {
	local output=$(mktemp)

	npx rollup --input client/scripts/main.js --preferConst --silent > "$output"
	[ "$?" != '0' ] && return "$?"

	if ! development_environment; then
		local buffer=$(mktemp)

		npx terser --keep-classnames --keep-fnames < "$output" > "$buffer"
		[ "$?" != '0' ] && return "$?"
		mv "$buffer" "$output"
	fi

	sed "s/{{script}}/$(sed -e 's/\\/\\\\/g; s/\//\\\//g; s/&/\\\&/g' $output)/"
}

style() {
	local options=()
	local output=$(mktemp)

	if ! development_environment; then
		options+=('--style=compressed')
	fi

	npx sass "${options[@]}" 'client/styles/main.scss' > "$output"
	[ "$?" != '0' ] && return "$?"
	sed "s/{{style}}/$(sed -e 's/\\/\\\\/g; s/\//\\\//g; s/&/\\\&/g' $output)/"
}

version() {
	local output=$(mktemp)

	node -e 'require("./package").version' -p > "$output"
	[ "$?" != '0' ] && return "$?"

	sed "s/{{version}}/$(sed -e 's/\\/\\\\/g; s/\//\\\//g; s/&/\\\&/g' $output)/"
}

main() {
	local input='client/templates/main.xslt'
	local output='public/superbindex.xslt'

	script < "$input" | style | version > "$output"
}

. "$(dirname $0)/run.sh"
